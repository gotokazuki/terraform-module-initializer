#/bin/bash

## create .editorconfig
if [ -e .editorconfig ]; then
  rm .editorconfig
  echo "removed .editorconfig"
fi
echo 'root = true

[*]
charset = utf-8
end_of_line = lf
indent_size = 2
indent_style = space
insert_final_newline = true
max_line_length = 120
trim_trailing_whitespace = true

[*.md]
max_line_length = 0
trim_trailing_whitespace = false
' >> .editorconfig
echo "created .editorconfig"

## create .gitattributes
if [ -e .gitattributes ]; then
  rm .gitattributes
  echo "removed .gitattributes"
fi
echo '*.tf text eol=lf
*.md text eol=lf
' >> .gitattributes
echo "created .gitattributes"

## create .gitignore
if [ -e .gitignore ]; then
  rm .gitignore
  echo "removed .gitignore"
fi
echo '
### Generated by gibo (https://github.com/simonwhitaker/gibo)
### https://raw.github.com/github/gitignore/4488915eec0b3a45b5c63ead28f286819c0917de/Global/VisualStudioCode.gitignore

.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix


### https://raw.github.com/github/gitignore/4488915eec0b3a45b5c63ead28f286819c0917de/Terraform.gitignore

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
' >> .gitignore
echo "created .gitignore"

## create .terraform-version
if [ -e .terraform-version ]; then
  rm .terraform-version
  echo "removed .terraform-version"
fi
echo '1.4.4' >> .terraform-version
echo "created .terraform-version"

## create terraform module template
touch main.tf
echo "created main.tf"
touch veriables.tf
echo "created variables.tf"
touch outputs.tf
echo "created outputs.tf"
touch versions.tf
echo "created versions.tf"
